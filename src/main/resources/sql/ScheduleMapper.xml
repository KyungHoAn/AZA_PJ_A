<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="ScheduleMapper">
	<resultMap id="scheduleSelectMap" type="schedule">
		<result property="scheduleCode" column="schedule_code" jdbcType="NUMERIC" />
		<result property="teacherId" column="teacher_id" jdbcType="VARCHAR" />
		<result property="scheduleStartDate" column="schedule_start_date" jdbcType="VARCHAR" />
		<result property="start" column="schedule_start_time" jdbcType="VARCHAR" />
		<result property="scheduleEndDate" column="schedule_end_date" jdbcType="VARCHAR" />
		<result property="end" column="schedule_end_time" jdbcType="VARCHAR" />
		<result property="scheduleContent" column="schedule_content" jdbcType="VARCHAR" />
		<result property="title" column="schedule_title" jdbcType="VARCHAR"/>
		
		<association property="studentId" javaType="students">
			<id property="studentId" column="student_id" jdbcType="VARCHAR"/>
			<result property="studentName" column="student_name" jdbcType="VARCHAR"/>
		</association>
		<association property="teacherName" javaType="user">
			<id property="userName" column="user_name" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	
	<insert id = "addLessonSchedule">
		INSERT INTO schedule 
		VALUES (seq_schedule_schedule_code.nextval,
		(SELECT user_id FROM USERS WHERE user_id = #{teacherId}), 
		#{scheduleStartDate:VARCHAR},#{start:VARCHAR},
		#{scheduleEndDate:VARCHAR},#{end:VARCHAR},#{scheduleContent:VARCHAR},#{title})
	</insert>
	
	<select id = "getLessonSchedule" parameterType = "int" resultMap = "scheduleSelectMap">		
		SELECT S.schedule_start_date, S.schedule_end_date, S.start, S.end, S.schedule_content,S.title
		FROM schedule S, users U
		WHERE S.teacher_id = u.user_id AND S.schedule_code = #{scheduleCode}
	</select>
	
	<update id = "updateLessonSchedule">
		UPDATE schedule
		<set>
			schedule_Start_Date = #{scheduleStartDate:VARCHAR},
			schedule_End_Date = #{scheduleEndDate:VARCHAR},
			start = #{scheduleStartTime:VARCHAR},
			end = #{scheduleEndTime:VARCHAR},
			schedule_content = #{scheduleContent:VARCHAR},
			title = #{scheduleTitlte:VARCHAR}
		</set>
		WHERE schedule_code = #{scheduleCode} AND teacher_id = #{teacherId}
	</update>
	
	<delete id ="deleteAll">
		DELETE FROM schedule where teacher_id = #{teacherId}
	</delete>
	
	<select id = "listLessonScheduleTeacher" resultMap="scheduleSelectMap">
		select s.* from schedule s
		where s.teacher_id = #{searchId}
		order by s.schedule_code desc
	</select>
	
	<select id = "listLessonScheduleStudents" resultMap="scheduleSelectMap">
		SELECT S.*, U.user_name
		FROM schedule S, users U, (SELECT L.teacher_id LT
		        FROM students_record SR, lesson L
		        WHERE SR.lesson_code = L.lesson_code AND SR.student_id = #{searchId} AND ROWNUM &lt; 2) A
		WHERE S.teacher_id = U.user_id AND U.user_id = A.LT
	</select>
	
	<!-- choice -->
	<select id = "listLessonScheduleParent" resultMap="scheduleSelectMap">
			select S.*, B.student_name, B.student_id
			FROM SCHEDULE S, (select L.teacher_id teacher_id, SR.student_id student_id, SR.student_name student_name
			        FROM LESSON L, STUDENTS_RECORD SR, (select R.student_id RSI
			                FROM relation R, users U
			                where U.user_id = R.parent_id and U.user_id = #{searchId}) A
			        WHERE L.lesson_code = SR.lesson_code AND SR.student_id = A.RSI 
			        <if test="searchCondition !=null">
			        	<if test="searchCondition == 0 and searchKeyword !='' ">
			        		AND SR.student_id = #{searchKeyword}
			        	</if>
			        </if>	) B		        
			WHERE S.teacher_id = B.teacher_id
	</select>
	
	<select id = "getlistLessonScheduleParentTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM(select S.*, B.student_name, B.student_id
			FROM SCHEDULE S, (select L.teacher_id teacher_id, SR.student_id student_id, SR.student_name student_name
			        FROM LESSON L, STUDENTS_RECORD SR, (select R.student_id RSI
			                FROM relation R, users U
			                where U.user_id = R.parent_id and U.user_id = #{searchId}) A
			        WHERE L.lesson_code = SR.lesson_code AND SR.student_id = A.RSI 
			        <if test="searchCondition !=null">
			        	<if test="searchCondition == 0 and searchKeyword !='' ">
			        		AND SR.student_id = #{searchKeyword}
			        	</if>
			        </if>		) B	        
			WHERE S.teacher_id = B.teacher_id
		)countTable
	</select>
	
	<select id = "listLessonSelectTeacher" resultMap="scheduleSelectMap">
		SELECT DISTINCT U.user_name,L.teacher_id
		FROM STUDENTS_RECORD SR, LESSON L, USERS U
		WHERE U.user_id = L.teacher_id AND SR.lesson_code = L.lesson_code AND SR.student_id = #{searchId}
	</select>
	
	<select id = "getlistLessonSelectTeacherTotalCount" resultType ="int">
		SELECT COUNT(*)
		FROM( SELECT DISTINCT U.user_name,L.teacher_id
				FROM STUDENTS_RECORD SR, LESSON L, USERS U
				WHERE U.user_id = L.teacher_id AND SR.lesson_code = L.lesson_code AND SR.student_id = #{searchKeyword}
		)countTable
	</select>
	
	<select id = "getLessonScheduleTeacherTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM(select s.* from schedule s
			where s.teacher_id = #{searchKeyword} ) countTable
	</select>
	
	<select id = "getLessonScheduleStudentsTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM(SELECT S.*, U.user_name
		FROM schedule S, users U, (SELECT L.teacher_id LT
		        FROM students_record SR, lesson L
		        WHERE SR.lesson_code = L.lesson_code AND SR.student_id = #{searchKeyword} AND ROWNUM &lt; 2) A
		WHERE S.teacher_id = U.user_id AND U.user_id = A.LT
		        ) countTable
	</select>
	
	<delete id="deleteSchedule" parameterType="map">
		DELETE FROM schedule
		WHERE teacher_id=#{teacher_id} 
		AND schedule_title = #{title} 
		AND schedule_start_time = #{start}
		AND sceedule_end_time = #{end}
	</delete>
	
</mapper>